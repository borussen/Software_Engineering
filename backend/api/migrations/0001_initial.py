# Generated by Django 4.1.3 on 2022-11-16 11:33

import api.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_enumfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "id",
                    models.BigAutoField(
                        help_text="User Id", primary_key=True, serialize=False
                    ),
                ),
                ("student_id", models.CharField(max_length=10, unique=True)),
                ("name", models.CharField(max_length=20)),
                ("is_active", models.BooleanField(default=True)),
                ("is_admin", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Lecture",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        help_text="Lecture Id", primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=2000)),
                ("deadline", models.DateTimeField()),
                ("submission_capacity", models.IntegerField()),
                ("storage_capacity", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Problem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        help_text="Problem Id", primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=2000)),
                ("explanation", models.CharField(max_length=2000)),
                ("reference", models.CharField(max_length=2000)),
                ("testcases", models.JSONField(default=list)),
                ("skeleton_code", models.CharField(max_length=2000)),
                ("answer_code", models.CharField(max_length=2000)),
                ("related_content", models.CharField(max_length=2000)),
                (
                    "lecture",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.lecture"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Submission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        help_text="Submission Id", primary_key=True, serialize=False
                    ),
                ),
                ("code", models.CharField(max_length=2000)),
                ("created_at", models.DateTimeField()),
                (
                    "state",
                    django_enumfield.db.fields.EnumField(
                        default=0, enum=api.models.SubmissionState
                    ),
                ),
                ("result", models.JSONField(default=dict)),
                ("analysis", models.JSONField(default=dict)),
                (
                    "problem",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.problem"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Storage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        help_text="Storage Id", primary_key=True, serialize=False
                    ),
                ),
                ("code", models.CharField(max_length=2000)),
                ("updated_at", models.DateTimeField()),
                (
                    "problem",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.problem"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Enrollment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        help_text="Enrollment Id", primary_key=True, serialize=False
                    ),
                ),
                (
                    "lecture",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.lecture"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
